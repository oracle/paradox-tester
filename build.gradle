plugins {
    id 'groovy'
    id 'idea'
    id 'application'
    id 'codenarc'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

// Exclude log4j 1.x from transitive dependencies
configurations {
    all*.exclude group: 'log4j', module: 'log4j'
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

def log4j2Version = '2.17.1'
dependencies {
    implementation "org.apache.logging.log4j:log4j-api:$log4j2Version"
    implementation "org.apache.logging.log4j:log4j-core:$log4j2Version"
    implementation "org.apache.logging.log4j:log4j-1.2-api:$log4j2Version"
    implementation "org.apache.logging.log4j:log4j-jcl:$log4j2Version"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2Version"
    implementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.+'
    implementation 'org.codehaus.groovy:groovy-all:2.4.+'
    implementation 'org.eclipse.jetty:jetty-servlet:9.3.6.+' //9.3.7.RC0 fails
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.26-b03'
    testImplementation 'org.testng:testng:6.9.+'
}

mainClassName = 'com.webtrends.qa.webtesting.MainClass'
jar.manifest.attributes 'Main-Class': mainClassName

applicationDistribution.from('config.groovy', 'webtesting.upstart') { }

test.useTestNG()

idea {
    project {
        jdkName = '1.8'
        vcs = 'Git'
    }
}

version = Boolean.parseBoolean(System.properties['release']) ? '2.1.1' : '2.1.1-SNAPSHOT'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId rootProject.name
        }
    }

    repositories { maven { url "$buildDir/repo" } }
}

if (project.hasProperty('artifactoryPublish')) {
    artifactory {
        publish {
            repository {
                maven = true
            }
            defaults {
                publications('mavenJava')
                publishPom = true
            }
        }
    }
}

codenarc {
    toolVersion = '1.0'
    configFile = new File('config/codenarc/codenarc.groovy')
    maxPriority1Violations = 0
    maxPriority2Violations = 0
    maxPriority3Violations = Integer.MAX_VALUE
    reportFormat = project.properties.'codenarc.reportFormat' ?: 'html'
}

// This emulates what the rundeck job would do
task deployLocal(type: Exec, dependsOn: distZip) {
    executable "sudo"
    args 'sh', '-c', """
unzip -o $buildDir/distributions/webtesting.zip -d /opt/infinity/
mv /opt/infinity/webtesting/webtesting.upstart /etc/init/webtesting.conf
start webtesting || restart webtesting
""".toString()
}

task updateVersionTxt(type: Exec) {
    executable 'git'
    args 'log', '-n1', '--format=%h %ci', 'HEAD'
    standardOutput = new File('VERSION.txt').newOutputStream()
}

// This packages a specific version of gradle, insulating us from jenkin's gradle updates
task prepareWrapper(type: Wrapper) {
    gradleVersion = '7.0'
}
